{"name":"Routingserviceprovider","tagline":"","body":"# RoutingServiceProvider\r\n\r\nConvention-based controllers for Silex\r\n\r\n[![Latest Stable Version](https://poser.pugx.org/achrafsoltani/routing-service-provider/v/stable)](https://packagist.org/packages/achrafsoltani/routing-service-provider)\r\n[![Total Downloads](https://poser.pugx.org/achrafsoltani/routing-service-provider/downloads)](https://packagist.org/packages/achrafsoltani/routing-service-provider)\r\n[![License](https://poser.pugx.org/achrafsoltani/routing-service-provider/license)](https://packagist.org/packages/achrafsoltani/routing-service-provider)\r\n\r\nRequirements\r\n------------\r\n * PHP 5.3+\r\n * monolog/monolog (through the MonologServiceProvider)\r\n\r\nInstallation\r\n------------ \r\n```sh\r\n$ composer require achrafsoltani/routing-service-provider\r\n```\r\nSetup\r\n------------\r\n``` {.php}\r\n$loader = require_once __DIR__.'/vendor/autoload.php';\r\n// THIS LINE IS MANDATORY, SO THE AUTOLOAD BECOMES AWARE OF YOUR CUSTOM CONTROLLERS\r\n$loader->addPsr4('',__DIR__.'/src/',true);\r\n\r\nuse Silex\\Application;\r\nuse AchrafSoltani\\Provider\\RoutingServiceProvider;\r\nuse Symfony\\Component\\HttpFoundation\\Response;\r\n\r\n$app = new Application();\r\n$app['debug'] = true;\r\n\r\n// Registering\r\n$app->register(new RoutingServiceProvider());\r\n\r\n// Defining routes\r\n// You could also implement a custom routes loader from different locations and server a RouteCollection\r\n// instance throough : $app['routing']->addRoutes($routes, $prefix);\r\n$route = new Symfony\\Component\\Routing\\Route('/', array('controller' => 'Foo\\Controller\\MainController::index'));\r\n// setting methods is optional\r\n$route->setMethods(array('GET', 'POST'));\r\n\r\n$route2 = new Symfony\\Component\\Routing\\Route('/hello', array('controller' => 'Foo\\Controller\\MainController::hello'));\r\n\r\n$app['routing']->addRoute('home', $route);\r\n$app['routing']->addRoute('hello', $route2);\r\n\r\n// call this rigth before $app->run();\r\n$app['routing']->route();\r\n$app->run();\r\n```\r\n\r\nExample Controller\r\n------------\r\n\r\n``` {.php}\r\n<?php\r\n\r\nnamespace Foo\\Controller;\r\n\r\nuse AchrafSoltani\\Controller\\Controller;\r\nuse Symfony\\Component\\HttpFoundation\\Response;\r\n\r\n// you should extend the base Controller (AchrafSoltani\\Controller\\Controller) in order to have\r\n// the service container injected\r\nclass MainController extends Controller\r\n{\r\n    public function index()\r\n    {\r\n        // services can be accessed as array params: $this->container['key'];\r\n        // $this->container is equal to the $app instance\r\n        if($this->container['debug'])\r\n        {\r\n            // or through the get method (symfony Like): $this->container['key'];\r\n            return $this->get('twig')->render('form.html.twig');\r\n        }\r\n    }\r\n    \r\n    public function hello()\r\n    {\r\n        \r\n        if($this->get('request')->isMethod('POST'))\r\n        {\r\n            $username = $this->get('request')->get('username');\r\n            return $this->get('twig')->render('hello.html.twig', array('username' => $username));\r\n        }\r\n        \r\n        return new Response('no post');\r\n    }\r\n}\r\n```\r\n\r\n\r\n\r\n","google":"UA-63755147-1","note":"Don't delete this file! It's used internally to help with page regeneration."}